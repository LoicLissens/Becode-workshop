{"ast":null,"code":"var _jsxFileName = \"/Users/loiclissens/Desktop/workshop-electron-init/src/metronome.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"./useInterval\";\nimport soundFile1 from \"./assets/click1.wav\";\nimport soundFile2 from \"./assets/click2.wav\";\nimport play from \"./assets/play.png\";\nimport pause from \"./assets/pause.png\";\n\nconst Metronome = () => {\n  const [beat, setBeat] = useState(100);\n  const [playing, setPlaying] = useState(false);\n  const click1 = new Audio(soundFile1);\n  const click2 = new Audio(soundFile2);\n\n  const handleSlider = e => {\n    setBeat(+e.target.value);\n  };\n\n  const startStop = () => {\n    if (!playing) {\n      setPlaying(true);\n    } else {\n      setPlaying(false);\n    }\n  };\n\n  const playClick = () => {\n    click1.currentTime = 0;\n    click1.play();\n  };\n\n  useInterval(() => {\n    if (playing) {\n      playClick();\n    }\n  }, 60000 / beat);\n  return React.createElement(\"div\", {\n    className: \"metronome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, beat, \" BPM\"), React.createElement(\"div\", {\n    className: \"bpm-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: \"60\",\n    max: \"240\",\n    value: beat,\n    onChange: handleSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"startStop\",\n    onClick: startStop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: playing ? pause : play,\n    alt: \"play/pause\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nexport default Metronome;","map":{"version":3,"sources":["/Users/loiclissens/Desktop/workshop-electron-init/src/metronome.js"],"names":["React","useState","useInterval","soundFile1","soundFile2","play","pause","Metronome","beat","setBeat","playing","setPlaying","click1","Audio","click2","handleSlider","e","target","value","startStop","playClick","currentTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,MAAM,GAAG,IAAIC,KAAJ,CAAUV,UAAV,CAAf;AACA,QAAMW,MAAM,GAAG,IAAID,KAAJ,CAAUT,UAAV,CAAf;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,OAAO,CAAC,CAACO,CAAC,CAACC,MAAF,CAASC,KAAX,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAI,CAACT,OAAL,EAAc;AACZC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAND;;AAQA,QAAMS,SAAS,GAAG,MAAM;AACtBR,IAAAA,MAAM,CAACS,WAAP,GAAqB,CAArB;AACAT,IAAAA,MAAM,CAACP,IAAP;AACD,GAHD;;AAKAH,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAIQ,OAAJ,EAAa;AACXU,MAAAA,SAAS;AACV;AACF,GAJU,EAIR,QAAQZ,IAJA,CAAX;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,SADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAC,IAAxB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAuC,IAAA,KAAK,EAAEA,IAA9C;AAAoD,IAAA,QAAQ,EAAEO,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEI,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAET,OAAO,GAAGJ,KAAH,GAAWD,IAA5B;AAAkC,IAAA,GAAG,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAWD,CAzCD;;AA0CA,eAAeE,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"./useInterval\";\n\nimport soundFile1 from \"./assets/click1.wav\";\nimport soundFile2 from \"./assets/click2.wav\";\nimport play from \"./assets/play.png\";\nimport pause from \"./assets/pause.png\";\n\nconst Metronome = () => {\n  const [beat, setBeat] = useState(100);\n  const [playing, setPlaying] = useState(false);\n\n  const click1 = new Audio(soundFile1);\n  const click2 = new Audio(soundFile2);\n\n  const handleSlider = (e) => {\n    setBeat(+e.target.value);\n  };\n\n  const startStop = () => {\n    if (!playing) {\n      setPlaying(true);\n    } else {\n      setPlaying(false);\n    }\n  };\n\n  const playClick = () => {\n    click1.currentTime = 0;\n    click1.play();\n  };\n\n  useInterval(() => {\n    if (playing) {\n      playClick();\n    }\n  }, 60000 / beat);\n\n  return (\n    <div className=\"metronome\">\n      <h3>{beat} BPM</h3>\n      <div className=\"bpm-slider\">\n        <input type=\"range\" min=\"60\" max=\"240\" value={beat} onChange={handleSlider} />\n      </div>\n      <button className=\"startStop\" onClick={startStop}>\n        <img src={playing ? pause : play} alt=\"play/pause\"></img>\n      </button>\n    </div>\n  );\n};\nexport default Metronome;\n"]},"metadata":{},"sourceType":"module"}