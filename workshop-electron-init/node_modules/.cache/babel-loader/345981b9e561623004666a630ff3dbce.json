{"ast":null,"code":"var _jsxFileName = \"/Users/loiclissens/Desktop/workshop-electron-init/src/metronome.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"./useInterval\";\nimport soundFile1 from \"./assets/click1.wav\";\nimport soundFile2 from \"./assets/click2.wav\";\nimport play from \"./assets/play.png\";\nimport pause from \"./assets/pause.png\";\n\nconst Metronome = () => {\n  const [beat, setBeat] = useState(100);\n  const [playing, setPlaying] = useState(false);\n  const [measure, setMeasure] = useState({\n    count: 0,\n    pulse: 4\n  });\n  const click1 = new Audio(soundFile1);\n  const click2 = new Audio(soundFile2);\n\n  const handleSlider = e => {\n    setMeasure({\n      count: 0,\n      pulse: measure.pulse\n    });\n    setBeat(+e.target.value);\n  };\n\n  const startStop = () => {\n    if (!playing) {\n      setMeasure({\n        count: 0,\n        pulse: measure.pulse\n      });\n      setPlaying(true);\n    } else {\n      setPlaying(false);\n    }\n  };\n\n  const playClick = () => {\n    if (measure.count % measure.pulse === 0) {\n      click1.currentTime = 0;\n      click1.play();\n    } else {\n      click2.currentTime = 0;\n      click2.play();\n    }\n\n    setMeasure({\n      count: (measure.count + 1) % measure.pulse,\n      pulse: measure.pulse\n    });\n  };\n\n  useInterval(() => {\n    if (playing) {\n      playClick();\n    }\n  }, 60000 / beat);\n\n  const handleMinus = () => {\n    setMeasure({\n      count: 0,\n      pulse: measure.pulse\n    });\n    setBeat(beat - 1);\n  };\n\n  const handlePlus = () => {\n    setMeasure({\n      count: 0,\n      pulse: measure.pulse\n    });\n    setBeat(beat + 1);\n  };\n\n  const handlePulse = e => {\n    document.querySelector(\"button.active\").forEach(button => button.classList.remove(\"active\"));\n    e.target.classList.add(\"active\");\n    setMeasure({\n      count: 0,\n      pulse: +e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"metronome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, beat, \" BPM\"), React.createElement(\"div\", {\n    className: \"bpm-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleMinus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"60\",\n    max: \"240\",\n    value: beat,\n    onChange: handleSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handlePlus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"+\")), React.createElement(\"button\", {\n    className: \"startStop\",\n    onClick: startStop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: playing ? pause : play,\n    alt: \"play/pause\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"bpm-measure\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Mesure : \"), React.createElement(\"button\", {\n    value: \"2\",\n    onClick: handlePulse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"button\", {\n    value: \"3\",\n    onClick: handlePulse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"button\", {\n    value: \"4\",\n    onClick: handlePulse,\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"4\")));\n};\n\nexport default Metronome;","map":{"version":3,"sources":["/Users/loiclissens/Desktop/workshop-electron-init/src/metronome.js"],"names":["React","useState","useInterval","soundFile1","soundFile2","play","pause","Metronome","beat","setBeat","playing","setPlaying","measure","setMeasure","count","pulse","click1","Audio","click2","handleSlider","e","target","value","startStop","playClick","currentTime","handleMinus","handlePlus","handlePulse","document","querySelector","forEach","button","classList","remove","add"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"./useInterval\";\n\nimport soundFile1 from \"./assets/click1.wav\";\nimport soundFile2 from \"./assets/click2.wav\";\nimport play from \"./assets/play.png\";\nimport pause from \"./assets/pause.png\";\n\nconst Metronome = () => {\n  const [beat, setBeat] = useState(100);\n  const [playing, setPlaying] = useState(false);\n  const [measure, setMeasure] = useState({\n    count: 0,\n    pulse: 4\n  });\n\n  const click1 = new Audio(soundFile1);\n  const click2 = new Audio(soundFile2);\n\n  const handleSlider = (e) => {\n    setMeasure({ count: 0, pulse: measure.pulse });\n    setBeat(+e.target.value);\n  };\n\n  const startStop = () => {\n    if (!playing) {\n      setMeasure({ count: 0, pulse: measure.pulse });\n      setPlaying(true);\n    } else {\n      setPlaying(false);\n    }\n  };\n\n  const playClick = () => {\n    if (measure.count % measure.pulse === 0) {\n      click1.currentTime = 0;\n      click1.play();\n    } else {\n      click2.currentTime = 0;\n      click2.play();\n    }\n    setMeasure({\n      count: (measure.count + 1) % measure.pulse,\n      pulse: measure.pulse\n    });\n  };\n\n  useInterval(() => {\n    if (playing) {\n      playClick();\n    }\n  }, 60000 / beat);\n  const handleMinus = () => {\n    setMeasure({ count: 0, pulse: measure.pulse });\n    setBeat(beat - 1);\n  };\n\n  const handlePlus = () => {\n    setMeasure({ count: 0, pulse: measure.pulse });\n    setBeat(beat + 1);\n  };\n\n  const handlePulse = (e) => {\n    document.querySelector(\"button.active\").forEach((button) => button.classList.remove(\"active\"));\n    e.target.classList.add(\"active\");\n    setMeasure({ count: 0, pulse: +e.target.value });\n  };\n\n  return (\n    <div className=\"metronome\">\n      <h3>{beat} BPM</h3>\n      <div className=\"bpm-slider\">\n        <button onClick={handleMinus}>-</button>\n        <input type=\"range\" min=\"60\" max=\"240\" value={beat} onChange={handleSlider} />\n        <button onClick={handlePlus}>+</button>\n      </div>\n\n      <button className=\"startStop\" onClick={startStop}>\n        <img src={playing ? pause : play} alt=\"play/pause\"></img>\n      </button>\n\n      <div className=\"bpm-measure\">\n        <h4>Mesure : </h4>\n        <button value=\"2\" onClick={handlePulse}>\n          2\n        </button>\n        <button value=\"3\" onClick={handlePulse}>\n          3\n        </button>\n        <button value=\"4\" onClick={handlePulse} className=\"active\">\n          4\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Metronome;\n"]},"metadata":{},"sourceType":"module"}